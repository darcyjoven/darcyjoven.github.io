[{"categories":["软件安装","软件使用"],"content":"windows 安装 RUST 官网下载 rustup-init.exe，linux系统按照sh文件安装 (https://www.rust-lang.org/)[https://www.rust-lang.org/] 不安装多余文件，选择3然后安装RUSTUP。 安装默认cargo 检查是否安装成功 安装mdbook cargo install mdbook 以上为windows安装方式，发现安装时缺少很多文件，放弃，因为不想用mdbook需要安装一个vs。后面是linux 的教程，系统是ubuntu。 rustup self uninstall，卸载已安装的rustup linux 安装 安装rust 安装mdbook cargo install mdbook WSL2 使用本机proxy export ALL_PROXY=“http://192.168.1.1:7890” 192.168.1.1是本机的IP 在需要的目录初始化mdbook mdbook init ","date":"2023年 11月16日","objectID":"/mdbook%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B/:0:0","tags":["rust","mdbook"],"title":"mdbook安装过程","uri":"/mdbook%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B/"},{"categories":["软件安装","软件使用"],"content":"mdbook 使用 mdbook build 发布为html，默认为book目录 dbook build --dest-dir**** 指定目的文件夹 mkbook watch 实时转为html mkbook serve 打开网页服务，并实时显示 mkbook clean 清除已build的内容 ","date":"2023年 11月16日","objectID":"/mdbook%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B/:1:0","tags":["rust","mdbook"],"title":"mdbook安装过程","uri":"/mdbook%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B/"},{"categories":["软件安装","软件使用"],"content":"mermaid 插件安装 cargo install mdbook-mermaid 安装到要使用的目录 mdbook-mermaid install ./ 额外语言支持 theme/highlight.js 使用此文件替换mdbook默认文件 ","date":"2023年 11月16日","objectID":"/mdbook%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B/:1:1","tags":["rust","mdbook"],"title":"mdbook安装过程","uri":"/mdbook%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B/"},{"categories":["BDL教学"],"content":"模组清单 模组看起来很多，常用的只有下面几个： AAP 应付账款 ABM 产品结构系统 产品BOM结构 AEC 工艺与工作站系统 产品的工艺资料 AGL 总账会计 AIM 库存料件资料管理系统 AOO 整体系统管理 APM 采购管理 ANM 票据资金 AQC 质量管理 ASF 生产管理 AWS 集成管理 AXC 成本管理 AXM 销售管理 AXR 应收账款 AZZ 系统管理 SUB 一般副程序 LIB 公用程序 GAP 应付账款管理系统大陆版 模组编号A变为C，就变成了客制模组，客制添加的作业一般在客制模组。 如果模组第一个字母不是A，是直接加C，如CSUB、CLIB、CGAP。 ","date":"2023年 11月16日","objectID":"/erptiptop%E5%AF%B9%E8%B1%A1%E5%91%BD%E5%90%8D%E8%A7%84%E5%88%99/:1:0","tags":["oracle","sql","bdl"],"title":"ERP（TIPTOP）对象命名规则","uri":"/erptiptop%E5%AF%B9%E8%B1%A1%E5%91%BD%E5%90%8D%E8%A7%84%E5%88%99/"},{"categories":["BDL教学"],"content":"作业类型编码 不同类型的作业可以分为以下几类： 单档录入作业：i 单档参数作业：s 双档录入作业：t 查询作业：q 报表作业：r 批处理作业：p ","date":"2023年 11月16日","objectID":"/erptiptop%E5%AF%B9%E8%B1%A1%E5%91%BD%E5%90%8D%E8%A7%84%E5%88%99/:2:0","tags":["oracle","sql","bdl"],"title":"ERP（TIPTOP）对象命名规则","uri":"/erptiptop%E5%AF%B9%E8%B1%A1%E5%91%BD%E5%90%8D%E8%A7%84%E5%88%99/"},{"categories":["BDL教学"],"content":"程序命名规则 程序一般为4为字母和3为流水码组成。（部分模组为了让开发者更好记住，不是这样命名，如p_zz，p_zx，p_zxw这些都是azz模组下的作业，不按照此命名方式命名） 例如： aooi040 —\u003e aoo是模组的名称，i 是作业类型编号，040 是流水号。 这个作业是aoo整体系统管理模组下的一个单档可录入资料的作业。 ","date":"2023年 11月16日","objectID":"/erptiptop%E5%AF%B9%E8%B1%A1%E5%91%BD%E5%90%8D%E8%A7%84%E5%88%99/:3:0","tags":["oracle","sql","bdl"],"title":"ERP（TIPTOP）对象命名规则","uri":"/erptiptop%E5%AF%B9%E8%B1%A1%E5%91%BD%E5%90%8D%E8%A7%84%E5%88%99/"},{"categories":["BDL教学"],"content":"数据库命名规则 ","date":"2023年 11月16日","objectID":"/erptiptop%E5%AF%B9%E8%B1%A1%E5%91%BD%E5%90%8D%E8%A7%84%E5%88%99/:4:0","tags":["oracle","sql","bdl"],"title":"ERP（TIPTOP）对象命名规则","uri":"/erptiptop%E5%AF%B9%E8%B1%A1%E5%91%BD%E5%90%8D%E8%A7%84%E5%88%99/"},{"categories":["BDL教学"],"content":"数据库表名规则 数据库表名分为表名和固定后缀两个部分，ERP中所有正式表（在p_zta中注册的表）都有固定的后缀（_file）。 标准表 标准表的表名是三位字母，这是鼎捷出场就建立好的表。我们不会去动这些表名。 如工单单头表名：sfb_file 客制表 后续客制添加的表名是以tc_ 固定前缀，和三位字母加上固定的后缀_file 组成的。 例如你要客制一个表，可以用tc_sfb_file，这样的方式命名。其中tc_与_file都是固定的只有三位字母需要自己取名。 ","date":"2023年 11月16日","objectID":"/erptiptop%E5%AF%B9%E8%B1%A1%E5%91%BD%E5%90%8D%E8%A7%84%E5%88%99/:4:1","tags":["oracle","sql","bdl"],"title":"ERP（TIPTOP）对象命名规则","uri":"/erptiptop%E5%AF%B9%E8%B1%A1%E5%91%BD%E5%90%8D%E8%A7%84%E5%88%99/"},{"categories":["BDL教学"],"content":"数据库表字段规则 数据库的表字段也是由两部分组成 表名+流水码。 标准表的标准字段 流水码一般为2为流水码，有时候字段多，可以用多维流水码或者字母，这个限制不是太死。一般是2位流水码。 例如：工单单号字段 sfb01，看名称sfb就是表名，这个字段是sfb_file表的一个字段，01是流水码。 标准表的客制字段 如果标准表中的字段不够用，可以增加字段，增加的字段叫做客制字段。 客制字段需要在字段前加固定前缀****ta_，例如：sfb_file表中增加客制字段用来记录备注，可以命名为ta_sfb01 客制表的字段 客制表的字段也是表名+流水码，例如tc_sfb01，tc_sfb02 字段 undefine 在标准表中有一些定义了但是没有使用的字段，例如：sfbud01，sfbud02，这些字段定义了但是没有存储数据，我们后面可以使用这些字段。 当ud字段数量不够时，可以在增加ta_sfb01，ta_sfb02这些客制字段。 ","date":"2023年 11月16日","objectID":"/erptiptop%E5%AF%B9%E8%B1%A1%E5%91%BD%E5%90%8D%E8%A7%84%E5%88%99/:4:2","tags":["oracle","sql","bdl"],"title":"ERP（TIPTOP）对象命名规则","uri":"/erptiptop%E5%AF%B9%E8%B1%A1%E5%91%BD%E5%90%8D%E8%A7%84%E5%88%99/"},{"categories":["编程问题"],"content":" 断言—接口断言为确定类型 var greeting interface{} = \"hello world\" greetingStr := greeting.(string) 类型转换—底层结构一致的类型相互转换 greeting := []byte(\"hello world\") greetingStr := string(greeting) ","date":"2023年 11月16日","objectID":"/go-inteface/:0:0","tags":["golang"],"title":"go 类型转换与断言","uri":"/go-inteface/"},{"categories":["软件安装","软件使用"],"content":" git stash 是储藏的意思 本地代码落后远程一此commit，但是本地又修改了代码，不希望本地增加一次提交，可以使用git stash。 git stash 是将本地修改的内容暂时保存，当远程同步后，再将暂时保存的内容取出修改。 git stash pop 取出最近一次暂存代码 再次查看已经没有差异 ","date":"2023年 11月16日","objectID":"/git-stash/:0:0","tags":["git"],"title":"git stash 使用","uri":"/git-stash/"},{"categories":["系统运维"],"content":"最近运行平均时间较长SQL查询 select*from(selectsa.SQL_TEXT,sa.SQL_FULLTEXT,sa.EXECUTIONS\"执行次数\",round(sa.ELAPSED_TIME/1000000,2)\"总执行时间\",round(sa.ELAPSED_TIME/1000000/sa.EXECUTIONS,2)\"平均执行时间\",sa.COMMAND_TYPE,sa.PARSING_USER_ID\"用户ID\",u.username\"用户名\",sa.HASH_VALUEfromv$sqlareasaleftjoinall_usersuonsa.PARSING_USER_ID=u.user_idwheresa.EXECUTIONS\u003e0orderby(sa.ELAPSED_TIME/sa.EXECUTIONS)desc)whererownum\u003c=50; ","date":"2023年 11月16日","objectID":"/oracle-run-sql/:1:0","tags":["oracle","sql"],"title":"oracle最近运行SQL查询","uri":"/oracle-run-sql/"},{"categories":["系统运维"],"content":"最近运行SQL查询 SELECT*fromV$SQLWHEREsql_idISNOTNULL; ","date":"2023年 11月16日","objectID":"/oracle-run-sql/:2:0","tags":["oracle","sql"],"title":"oracle最近运行SQL查询","uri":"/oracle-run-sql/"},{"categories":["编程问题"],"content":" // 一次性写入 if err := os.WriteFile(\"file.txt\", []byte(\"Hello GOSAMPLES!\"), 0666); err != nil { log.Fatal(err) } // 逐行写入 package main import ( \"log\" \"os\" ) var lines = []string{ \"Go\", \"is\", \"the\", \"best\", \"programming\", \"language\", \"in\", \"the\", \"world\", } func main() { // create file f, err := os.Create(\"file.txt\") if err != nil { log.Fatal(err) } // remember to close the file defer f.Close() for _, line := range lines { _, err := f.WriteString(line + \"\\n\") if err != nil { log.Fatal(err) } } } // 写入byte package main import ( \"log\" \"os\" ) var bytes = []byte{ 0x47, // G 0x4f, // O 0x20, // \u003cspace\u003e 0x20, // \u003cspace\u003e 0x20, // \u003cspace\u003e 0x50, // P 0x4c, // L 0x45, // E 0x53, // S } var additionalBytes = []byte{ 0x53, // S 0x41, // A 0x4d, // M } func main() { // create file f, err := os.Create(\"file.txt\") if err != nil { log.Fatal(err) } // remember to close the file defer f.Close() // write bytes to the file _, err = f.Write(bytes) if err != nil { log.Fatal(err) } // write additional bytes to the file, start at index 2 _, err = f.WriteAt(additionalBytes, 2) if err != nil { log.Fatal(err) } } // 缓冲方式写入 package main import ( \"bufio\" \"log\" \"os\" ) var lines = []string{ \"Go\", \"is\", \"the\", \"best\", \"programming\", \"language\", \"in\", \"the\", \"world\", } func main() { // create file f, err := os.Create(\"file.txt\") if err != nil { log.Fatal(err) } // remember to close the file defer f.Close() // create new buffer buffer := bufio.NewWriter(f) for _, line := range lines { _, err := buffer.WriteString(line + \"\\n\") if err != nil { log.Fatal(err) } } // flush buffered data to the file if err := buffer.Flush(); err != nil { log.Fatal(err) } } ","date":"2023年 11月16日","objectID":"/golang-write/:0:0","tags":["golang","文件系统"],"title":"golang的文件写入","uri":"/golang-write/"},{"categories":["系统运维"],"content":"假设存在两个表： createtabledarcy1(ima01varchar(40),ima02varchar(40),ima021varchar(200));createtabledarcy2(ima01varchar(40),ima02varchar(40)) 运行下面代码不会出错，darcy2虽然没有ima021字段，但是SQL能匹配到darcy1有ima021字段，所以ima021字段被省略了。 select*fromdarcy1where(ima01,ima02,ima021)in(selectima01,ima02,ima021fromdarcy2whereima01like'M%') 以上代码结果等价于： select*fromdarcy1where(ima01,ima02)in(selectima01,ima02fromdarcy2whereima01like'M%') 所以嵌套的时候，如果两个表字段有可能重复，子查询中请尽量用表名.字段的形式。 ","date":"2023年 11月16日","objectID":"/sql-in-error/:0:0","tags":["oracle","sql","运维"],"title":"in嵌套错误字段问题","uri":"/sql-in-error/"},{"categories":["软件安装"],"content":" graph LR subgraph 6.服务端验证完毕: end subgraph 5.客户端发送验证后资料: j[\"客户端\"]--私钥解密--\u003ek[\"服务端\"] end subgraph 4.客户端请求服务段验证: e[\"服务端\"]--随机数据--\u003eg[\"客户端\"] end subgraph 3.客户端访问客户端: d[\"客户端\"]--\u003ef[\"服务端\"] end subgraph 2.私钥放到服务端: h[\"私钥\"]--放置--\u003ei[\"服务端\"] end subgraph 1.产生密钥: a[\"客户端\"]--生成--\u003eb[\"公钥\"] a--生成--\u003ec[\"私钥\"] end 产生ssh密钥 #产生ssh密钥 \u003e ssh-keygen Generating public/private rsa key pair. Enter file in which to save the key (C:\\Users\\darcy/.ssh/id_rsa): Enter passphrase (empty for no passphrase): Enter same passphrase again: Your identification has been saved in C:\\Users\\darcy/.ssh/id_rsa Your public key has been saved in C:\\Users\\darcy/.ssh/id_rsa.pub The key fingerprint is: SHA256:NezN7f4OQQ183iHvX17y6QLijOTIDoWzhozgvo/tras darcy@darcy The key's randomart image is: +---[RSA 3072]----+ | .. | | . ..+.| | + +o+| | . o + o .o| |. o . S . o + | |= . + . . . ..oo| |.+ +. + + . . o+=| |. + oo o o o o+| | E=*+o ++o| +----[SHA256]-----+ ","date":"2023年 11月16日","objectID":"/ssh%E5%AF%86%E9%92%A5%E4%BD%BF%E7%94%A8/:0:0","tags":["ssh","远程开发"],"title":"ssh密钥使用","uri":"/ssh%E5%AF%86%E9%92%A5%E4%BD%BF%E7%94%A8/"},{"categories":["编程问题"],"content":"excel汇入 DEFINE xlapp INTEGER DEFINE xlwb INTEGER MAIN DEFINE result INTEGER DEFINE str STRING --initialization of global variables LET xlapp = -1 LET xlwb = -1 --first, we must create an Instance of an Excel Application CALL ui.Interface.frontCall(\"WinCOM\", \"CreateInstance\", [\"Excel.Application\"], [xlapp]) CALL CheckError(xlapp, __LINE__) --then adding a Workbook to the current document CALL ui.interface.frontCall(\"WinCOM\", \"CallMethod\", [xlapp, \"WorkBooks.Add\"], [xlwb]) CALL CheckError(xlwb, __LINE__) --then, setting it to be visible CALL ui.interface.frontCall(\"WinCOM\", \"SetProperty\", [xlapp, \"Visible\", true], [result]) CALL CheckError(result, __LINE__) --then CALL SetProperty to set the value of the cell CALL ui.Interface.frontCall(\"WinCOM\", \"SetProperty\", [xlwb, 'activesheet.Range(\"A1\").Value', \"foo\"],[result]) CALL CheckError(result, __LINE__) --then CALL GetProperty to check the value again CALL ui.Interface.frontCall(\"WinCOM\", \"GetProperty\", [xlwb, 'activesheet.Range(\"A1\").Value'], [str]) CALL CheckError(str, __LINE__) DISPLAY \"content of the cell is: \" || str --then Free the memory on the client side CALL freeMemory() END MAIN FUNCTION freeMemory() DEFINE res INTEGER IF xlwb != -1 THEN CALL ui.Interface.frontCall(\"WinCOM\",\"ReleaseInstance\", [xlwb], [res] ) END IF IF xlapp != -1 THEN CALL ui.Interface.frontCall(\"WinCOM\",\"ReleaseInstance\", [xlapp], [res] ) END IF END FUNCTION FUNCTION checkError(res, lin) DEFINE res INTEGER DEFINE lin INTEGER DEFINE mess STRING IF res = -1 THEN DISPLAY \"COM Error for call at line:\", lin CALL ui.Interface.frontCall(\"WinCOM\",\"GetError\",[],[mess]) DISPLAY mess --let's release the memory on the GDC side CALL freeMemory() DISPLAY \"Exit with COM Error.\" EXIT PROGRAM (-1) END IF END FUNCTION ","date":"2023年 11月16日","objectID":"/tiptop-gp-%E5%B8%B8%E7%94%A8%E7%9A%84%E5%87%BD%E6%95%B0%E5%92%8C%E7%BC%96%E7%A8%8B%E6%96%B9%E5%BC%8F/:1:0","tags":["bdl","tiptop gp"],"title":"tiptop gp 常用的函数和编程方式","uri":"/tiptop-gp-%E5%B8%B8%E7%94%A8%E7%9A%84%E5%87%BD%E6%95%B0%E5%92%8C%E7%BC%96%E7%A8%8B%E6%96%B9%E5%BC%8F/"},{"categories":["编程问题"],"content":"列表报错 CALL s_showmsg_init() LOOP CALL s_errmsg(field,date,msg,'mfg0301',1) END CALL s_showmsg() ","date":"2023年 11月16日","objectID":"/tiptop-gp-%E5%B8%B8%E7%94%A8%E7%9A%84%E5%87%BD%E6%95%B0%E5%92%8C%E7%BC%96%E7%A8%8B%E6%96%B9%E5%BC%8F/:2:0","tags":["bdl","tiptop gp"],"title":"tiptop gp 常用的函数和编程方式","uri":"/tiptop-gp-%E5%B8%B8%E7%94%A8%E7%9A%84%E5%87%BD%E6%95%B0%E5%92%8C%E7%BC%96%E7%A8%8B%E6%96%B9%E5%BC%8F/"},{"categories":["编程问题"],"content":"动态设置下拉框 DECLARE t310_curoqaud03 CURSOR FOR SELECT UNIQUE azi01 FROM azi_file LET g_oqaud03_cmbo = \"\" FOREACH t310_curoqaud03 INTO g_azi01 IF cl_null(g_oqaud03_cmbo) THEN LET g_oqaud03_cmbo=g_azi01 ELSE LET g_oqaud03_cmbo=g_oqaud03_cmbo CLIPPED,\",\",g_azi01 CLIPPED END IF END FOREACH CALL cl_set_combo_items(\"oqaud03\",g_oqaud03_cmbo,g_oqaud03_cmbo) ","date":"2023年 11月16日","objectID":"/tiptop-gp-%E5%B8%B8%E7%94%A8%E7%9A%84%E5%87%BD%E6%95%B0%E5%92%8C%E7%BC%96%E7%A8%8B%E6%96%B9%E5%BC%8F/:3:0","tags":["bdl","tiptop gp"],"title":"tiptop gp 常用的函数和编程方式","uri":"/tiptop-gp-%E5%B8%B8%E7%94%A8%E7%9A%84%E5%87%BD%E6%95%B0%E5%92%8C%E7%BC%96%E7%A8%8B%E6%96%B9%E5%BC%8F/"},{"categories":["编程问题"],"content":"字段显示颜色 ","date":"2023年 11月16日","objectID":"/tiptop-gp-%E5%B8%B8%E7%94%A8%E7%9A%84%E5%87%BD%E6%95%B0%E5%92%8C%E7%BC%96%E7%A8%8B%E6%96%B9%E5%BC%8F/:4:0","tags":["bdl","tiptop gp"],"title":"tiptop gp 常用的函数和编程方式","uri":"/tiptop-gp-%E5%B8%B8%E7%94%A8%E7%9A%84%E5%87%BD%E6%95%B0%E5%92%8C%E7%BC%96%E7%A8%8B%E6%96%B9%E5%BC%8F/"},{"categories":["编程问题"],"content":"表单 cl_chg_comp_att(ps_fields,ps_atts,ps_values) CALL cl_chg_comp_att(\"tc_ioa01,tc_ioa02\",\"color\",\"cyan\") 不支持的属性修改 LET lwin_curr = ui.Window.getCurrent() LET lfrm_curr = lwin_curr.getForm() LET lnode_item = lfrm_curr.findNode(\"FormField\",\"formonly.tc_ioa01\") LET lnode_child = lnode_item.getFirstChild() CALL lnode_child.setAttribute(\"underline\",true) 表格 利用DIALOG.setCellAttributes()函数 新增一个和单身数组字段一致的数组 DEFINE g_oeb_color DYNAMIC ARRAY OF RECORD c01 STRING,c02 STRING, c03 STRING,c04 STRING, c05 STRING,c06 STRING, c07 STRING,c08 STRING, c09 STRING,c10 STRING, c11 STRING,c12 STRING END RECORD 每笔单独设置颜色 LET g_oeb_color[2].c10 =\"red\" 在DISPLAY中设置显示模式 BEFORE DISPLAY ##显示之前设置属性 CALL DIALOG.setCellAttributes(g_oeb_color) ","date":"2023年 11月16日","objectID":"/tiptop-gp-%E5%B8%B8%E7%94%A8%E7%9A%84%E5%87%BD%E6%95%B0%E5%92%8C%E7%BC%96%E7%A8%8B%E6%96%B9%E5%BC%8F/:4:1","tags":["bdl","tiptop gp"],"title":"tiptop gp 常用的函数和编程方式","uri":"/tiptop-gp-%E5%B8%B8%E7%94%A8%E7%9A%84%E5%87%BD%E6%95%B0%E5%92%8C%E7%BC%96%E7%A8%8B%E6%96%B9%E5%BC%8F/"},{"categories":["ERP问题","系统运维"],"content":"环境变量FGLSQLDEBUG 此环境变量，控制运行程序时，后台显示日期的等级。 最高等级为9，取消设置命令为unset FGLSQLDEBUG 将环境变量设置为9 后，运行我们想要分析效能的程序，并将日志记录到文件中。 export FGLSQLDEBUG=9 exe2 p_zz \u003e\u003e p_zz.log 2\u003e\u00261 ","date":"2023年 11月16日","objectID":"/tiptop-%E6%95%88%E8%83%BD%E6%8E%92%E6%9F%A5/:1:0","tags":["bdl","debug","sql","oracle"],"title":"tiptop 效能排查","uri":"/tiptop-%E6%95%88%E8%83%BD%E6%8E%92%E6%9F%A5/"},{"categories":["ERP问题","系统运维"],"content":"分析日志 日志除了人工分析，系统也有作业可以分析。 $FGLRUN $DS4GL/bin/fgldebug.42r $FGLRUN $UTL/fbin/42m/T100SQLDebug.42r p_zz.log 即可打开效能分析工具 💡 r.r2d+和r.h分别时tiptop gp和T100的效能功能。如果环境没问题，直接运行 r.r2d+/r.h p_zz 也可以直接分析效能 ","date":"2023年 11月16日","objectID":"/tiptop-%E6%95%88%E8%83%BD%E6%8E%92%E6%9F%A5/:2:0","tags":["bdl","debug","sql","oracle"],"title":"tiptop 效能排查","uri":"/tiptop-%E6%95%88%E8%83%BD%E6%8E%92%E6%9F%A5/"},{"categories":["系统运维"],"content":"清楚查询缓存 ALTERSYSTEMFLUSHSHARED_POOL;ALTERSYSTEMFLUSHBUFFER_CACHE;ALTERSYSTEMFLUSHGLOBALCONTEXT; ","date":"2023年 11月16日","objectID":"/oracle-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E4%B8%8Esql/:1:0","tags":["oracle","sql","运维"],"title":"oracle 常用命令与SQL","uri":"/oracle-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E4%B8%8Esql/"},{"categories":["系统运维"],"content":"分析表结构 --① 分析表的所有字段，所有索引，所有索引字段。其中：① = ② analyzetablestudentcomputestatistics;--② 分析表的所有字段，所有索引，所有索引字段。其中：① = ② analyzetablestudentcomputestatisticsfortableforallindexesforallcolumns;--③ 只分析所有有索引的字段 analyzetablestudentcomputestatisticsfortableforallindexesforallindexedcolumns;--④ 抽样估算法 analyzetablestudentestimatestatisticssample20percent;--⑤ 删除分析数据 analyzetablestudentdeletestatistics;analyzetablestudentdeletestatisticsfortableforallindexesforallindexedcolumns;--查看表的统计信息 selecttable_name,num_rows,blocks,empty_blocksfromuser_tableswheretable_name='student';analyzetableglaq_tcomputestatistics; ","date":"2023年 11月16日","objectID":"/oracle-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E4%B8%8Esql/:2:0","tags":["oracle","sql","运维"],"title":"oracle 常用命令与SQL","uri":"/oracle-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E4%B8%8Esql/"},{"categories":["系统运维"],"content":"优化器 优先查询前25笔 SELECT/*+ FIRST_ROWS(25) */employee_id,department_idFROMhr.employeesWHEREdepartment_id\u003e50; 强制走索引 SELECT/*+index(a)*/*FROMsfb_fileLEFTJOINsfa_fileONsfa01=sfb01LEFTJOINima_fileaONa.ima01=sfb05LEFTJOINima_filebONb.ima01=sfa03LEFTJOINima_filecONc.ima01=sfa27 ","date":"2023年 11月16日","objectID":"/oracle-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E4%B8%8Esql/:3:0","tags":["oracle","sql","运维"],"title":"oracle 常用命令与SQL","uri":"/oracle-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E4%B8%8Esql/"},{"categories":["系统运维"],"content":"查询被删除的表 selectobject_name,original_name,partition_name,type,ts_name,createtime,droptimefromrecyclebin; 恢复删除的表 flashbacktabletest_droptobeforedrop;或flashbacktable\"BIN$hgcd$0\"tobeforedrop; ","date":"2023年 11月16日","objectID":"/oracle-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E4%B8%8Esql/:4:0","tags":["oracle","sql","运维"],"title":"oracle 常用命令与SQL","uri":"/oracle-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E4%B8%8Esql/"},{"categories":["系统运维"],"content":"清理临时表空间 setlinesize132;setpagesize0;settimingoff;spooldrop_tables.sql;SELECT'drop table '||OWNER||'.'||TABLE_name||' purge;'FROMdba_tablesWHEREtablespace_name='TEMPTABS';spooloff;@drop_tables.sql; ","date":"2023年 11月16日","objectID":"/oracle-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E4%B8%8Esql/:5:0","tags":["oracle","sql","运维"],"title":"oracle 常用命令与SQL","uri":"/oracle-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E4%B8%8Esql/"},{"categories":["系统运维"],"content":"查询某个时间之前的表状态（闪回） select*fromsfb_fileasoftimestampto_timestamp('2021-09-22 15:30:00','yyyy-mm-dd hh24:mi:ss') ","date":"2023年 11月16日","objectID":"/oracle-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E4%B8%8Esql/:6:0","tags":["oracle","sql","运维"],"title":"oracle 常用命令与SQL","uri":"/oracle-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E4%B8%8Esql/"},{"categories":["系统运维"],"content":"查询单个table占用磁盘空间 select*from(selectt.tablespace_name,t.owner,t.segment_name,t.segment_type,sum(t.bytes/1024/1024)mbfromdba_segmentstwheret.segment_type='TABLE'ANDtablespace_name='TEMPTABS'groupbyt.tablespace_name,t.OWNER,t.segment_name,t.segment_type)torderbyt.mbdesc; ","date":"2023年 11月16日","objectID":"/oracle-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E4%B8%8Esql/:7:0","tags":["oracle","sql","运维"],"title":"oracle 常用命令与SQL","uri":"/oracle-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E4%B8%8Esql/"},{"categories":["系统运维"],"content":"在备份中仅恢复部分表 准备号dmp备份文件 建立临时测试库 sqlplus system/manager@topprod create user test1 identified by test1 default tablespace dbs1; grant connect,resource to test1; commit; 恢复表 imp system/manager@topprod file=/u3/backup/Wed/exp_KT_20210203.dmp fromuser=kt touser=test1 tables=gen_file,eci_file ","date":"2023年 11月16日","objectID":"/oracle-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E4%B8%8Esql/:8:0","tags":["oracle","sql","运维"],"title":"oracle 常用命令与SQL","uri":"/oracle-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E4%B8%8Esql/"},{"categories":["系统运维"],"content":"增加表空间 命令查询表空间是否足够 查询表空间文件位置 增加合适大小表空间文件 alter tablespace xx add datafile 'xxx.dbf' size 4G; ","date":"2023年 11月16日","objectID":"/oracle-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E4%B8%8Esql/:9:0","tags":["oracle","sql","运维"],"title":"oracle 常用命令与SQL","uri":"/oracle-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E4%B8%8Esql/"},{"categories":["编程问题"],"content":"递归查询 -- 递归遍历查询 selectt.*,LEVELfromarea_testtstartwithname='郑州市'connectbypriorid=parent_id;selectbmb09frombmb_filewherebmb04\u003c=?and(bmb05isnullorbmb05\u003e?)startwithbmb01in(selectoeb04fromoeb_filewhereoeb01=?)connectbypriorbmb03=bmb01 ","date":"2023年 11月16日","objectID":"/oracle-sql%E8%AF%AD%E6%B3%95/:1:0","tags":["sql","oracle"],"title":"oracle sql语法","uri":"/oracle-sql%E8%AF%AD%E6%B3%95/"},{"categories":["编程问题"],"content":"pivot 列转行 WITHaAS(SELECT'darcy'na,'语文'ke,23scoreFROMdual),bAS(SELECT'tom','语文',23FROMdual),cAS(SELECT'darcy','数学',24FROMdual),dAS(SELECT*FROMaUNIONALLSELECT*FROMbUNIONALLSELECT*FROMc)SELECTna,语文,数学FROM(SELECTna,ke,scoreFROMd)PIVOT(SUM(score)FORkeIN('语文'AS语文,'数学'AS数学)); ","date":"2023年 11月16日","objectID":"/oracle-sql%E8%AF%AD%E6%B3%95/:2:0","tags":["sql","oracle"],"title":"oracle sql语法","uri":"/oracle-sql%E8%AF%AD%E6%B3%95/"},{"categories":["编程问题"],"content":"unpivot 行转列 WITHaAS(SELECT'darcy'na,'90'语文,'80'数学,'87'英语FROMdual)SELECTna,ke,scoreFROMaUNPIVOT(scoreforkein(语文,数学,英语)) ","date":"2023年 11月16日","objectID":"/oracle-sql%E8%AF%AD%E6%B3%95/:3:0","tags":["sql","oracle"],"title":"oracle sql语法","uri":"/oracle-sql%E8%AF%AD%E6%B3%95/"},{"categories":["编程问题"],"content":"keep 聚合的基础上再取最值 SELECTtc_bmj03,tc_bmj04,MAX(tc_bmj01)KEEP(dense_rankLASTorderBYtc_bmj09)max01FROMtc_bmj_fileWHEREtc_bmj11='2'GROUPBYtc_bmj03,tc_bmj04 ","date":"2023年 11月16日","objectID":"/oracle-sql%E8%AF%AD%E6%B3%95/:4:0","tags":["sql","oracle"],"title":"oracle sql语法","uri":"/oracle-sql%E8%AF%AD%E6%B3%95/"},{"categories":["编程问题"],"content":"over 分析 语法：rank()/dense_rank over(partition by A order by B) over是一种分析函数，根据字段A对结果进行分区，在各分区内按照字段进行排序； over不能单独使用，需要与row_number()，rank()和dense_rank，lag()和lead(),sum()等配合使用 说明： over()在什么条件之上 partition by 按哪个字段划分组 order by 按哪个字段排序 注意： 使用rank()/dense_rank() 时，必须要带order by否则非法 rank(): 跳跃排序，如果有两个第一级时，接下来就是第三级 dense_rank(): 连续排序，如果有两个第一级时，接下来仍然是第二级 SELECTfan01,fan03,fan04,fan15,dense_rank()OVER(PARTITIONBYfan01ORDERBYfan03DESC,fan04DESC)rFROMfan_fileWHEREfan041IN('0','1')ANDfan05IN('1','2')ANDfan01='FLYG200001' ","date":"2023年 11月16日","objectID":"/oracle-sql%E8%AF%AD%E6%B3%95/:5:0","tags":["sql","oracle"],"title":"oracle sql语法","uri":"/oracle-sql%E8%AF%AD%E6%B3%95/"},{"categories":["编程问题"],"content":"lag 偏移函数 可以查询上几条数据,下几条数据,适合查上下站资料 SELECTfan01,fan03,fan04,fan15,LAG(fan03||fan04)OVER(ORDERBYfan03DESC,fan04DESC)a1,LAG(fan03||fan04,2,0)OVER(ORDERBYfan03,fan04)a2FROMfan_fileWHEREfan041IN('0','1')ANDfan05IN('1','2')ANDfan01='FLYG200001'ORDERBYfan03,fan04 ","date":"2023年 11月16日","objectID":"/oracle-sql%E8%AF%AD%E6%B3%95/:6:0","tags":["sql","oracle"],"title":"oracle sql语法","uri":"/oracle-sql%E8%AF%AD%E6%B3%95/"},{"categories":["编程问题"],"content":"instr 字符串匹配函数 SELECTINSTR('123456789','2'),-- 返回：2 INSTR('123456654321','66'),-- 返回：6 INSTR('123456654321','66',6),-- 返回：6 INSTR('123456654321','66',8),-- 返回：0 INSTR('11223344','2',1,2),-- 返回：4 INSTR('11223344','2',2,3),-- 返回：0 INSTR('11223344','2',-1,2),-- 返回：3 INSTR('11223344','2',-6,1),-- 返回：3 INSTR('11223344','2',-6,2)-- 返回：0 FROMDUAL; ","date":"2023年 11月16日","objectID":"/oracle-sql%E8%AF%AD%E6%B3%95/:7:0","tags":["sql","oracle"],"title":"oracle sql语法","uri":"/oracle-sql%E8%AF%AD%E6%B3%95/"},{"categories":["编程问题"],"content":"listagg 聚合为一条数据 LISTAGG(字段名,',')WITHINGROUP(ORDERBY字段名) listagg(字段名,',')withinGROUP(orderby字段名)over(partitionby字段名)rank withtempas(select500population,'中国'nation,'江苏'cityfromdualunionallselect1500population,'中国'nation,'上海'cityfromdualunionallselect500population,'中国'nation,'北京'cityfromdualunionallselect1000population,'美国'nation,'纽约'cityfromdualunionallselect500population,'美国'nation,'波士顿'cityfromdualunionallselect500population,'日本'nation,'东京'cityfromdual)selectpopulation,nation,city,listagg(city,',')withinGROUP(orderbycity)over(partitionbynation)rankfromtemp ","date":"2023年 11月16日","objectID":"/oracle-sql%E8%AF%AD%E6%B3%95/:8:0","tags":["sql","oracle"],"title":"oracle sql语法","uri":"/oracle-sql%E8%AF%AD%E6%B3%95/"},{"categories":null,"content":"关于 LoveIt","date":"2019年 08月02日","objectID":"/about/","tags":null,"title":"关于 LoveIt","uri":"/about/"},{"categories":null,"content":"@darcyjoven 👋 🔭 I’m currently working at Forewin a company in suzhou.jiangsu.China 💬 Ask me about golang,fgl genero,ERP,javascript… 🖥 My blog site is: darcy’s blog 📘 My book site is: darcy’s book 📫 How to reach me: ✉ darcy_joven@live.com 📱 wechat:darcy_joven ","date":"2019年 08月02日","objectID":"/about/:0:0","tags":null,"title":"关于 LoveIt","uri":"/about/"}]